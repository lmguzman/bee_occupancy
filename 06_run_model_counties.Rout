
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(stringr)
> 
> source("R/src/initialize.R")
Loading required package: coda
Linked to JAGS 4.3.1
Loaded modules: basemod,bugs

Attaching package: ‘R2jags’

The following object is masked from ‘package:coda’:

    traceplot

Loading required package: boot
> 
> run_model <- function(year_range, model, family){
+   
+   ## load data
+   if(str_detect(model, 'era')){
+     
+     all_data <- readRDS(paste0("clean_data/data_prepared/my_data_era_genus_counties_", paste0(year_range, collapse = "_"), "_", family,".rds" ))
+     
+   }else{
+     all_data <- readRDS(paste0("clean_data/data_prepared/my_data_env_genus_counties_", paste0(year_range, collapse = "_"), "_", family,".rds" ))
+   }
+   
+   ## assign data to main vars
+   
+   my.data <- all_data[[1]]
+   nsite <- length(all_data$site)
+   nyr <- length(all_data$year)
+   nsp <- length(all_data$sp)
+   
+   ## Initial values 
+   Zst <- array(1,dim=c(nsite,nyr,nsp))
+   make.inits <- function() {
+     RNG <- parallel.seeds("base::BaseRNG", 1)
+     c(list(Z=Zst), RNG[[1]])
+   }
+   inits1 <- make.inits()
+   inits2 <- make.inits()
+   inits3 <- make.inits()
+   
+   
+   
+   ## MCMC settings 
+   n.burnin <- 1e2
+   n.adapt  <- 1e2
+   n.iter   <- 1e4
+   n.thin   <- 1e2
+   
+   ## source JAGS model
+   source(sprintf('R/models/%s.R', model))
+   model.txt <- sprintf('R/models/%s.txt', model)
+   write.model(model.jags, con=model.txt)
+   
+   res <- run.jags(model=model.txt,
+                   monitor=get.params(),
+                   data=my.data,
+                   inits=list(inits1,inits2,inits3),
+                   n.chains=3,
+                   burnin=n.burnin,
+                   sample=floor(n.iter/n.thin),
+                   thin=n.thin,
+                   adapt=n.adapt,
+                   method='parallel')
+   
+   saveRDS(res, paste0("model_outputs/res_counties_", paste0(year_range, collapse = "_"), "_",model, ".rds"))
+   
+   
+   res.summary <-  add.summary(res)
+   
+   
+   saveRDS(res.summary, paste0("model_outputs/res.summary_counties_", paste0(year_range, collapse = "_"), "_",model, ".rds"))
+   
+ }
> 
> run_model(c(1995, 2014), 'ms_era_1_area', "ALL")
Calling 3 simulations using the parallel method...
Following the progress of chain 1 (the program will wait for all chains
to finish before continuing):
Welcome to JAGS 4.3.1 (official binary) on Wed Jul 13 16:51:44 2022
JAGS is free software and comes with ABSOLUTELY NO WARRANTY
Loading module: basemod: ok
Loading module: bugs: ok
. . Reading data file data.txt
. Compiling model graph
   Resolving undeclared variables
   Allocating nodes